import{_ as a,o as e,c as t,Q as r}from"./chunks/framework.0f4e1e9e.js";const m=JSON.parse('{"title":"前端开发「组件化」","description":"","frontmatter":{},"headers":[],"relativePath":"frontend/1 前端工程化/2 组件化/README.md","filePath":"frontend/1 前端工程化/2 组件化/README.md"}'),o={name:"frontend/1 前端工程化/2 组件化/README.md"},n=r('<h1 id="前端开发「组件化」" tabindex="-1">前端开发「组件化」 <a class="header-anchor" href="#前端开发「组件化」" aria-label="Permalink to &quot;前端开发「组件化」&quot;">​</a></h1><h2 id="组件化" tabindex="-1">组件化 <a class="header-anchor" href="#组件化" aria-label="Permalink to &quot;组件化&quot;">​</a></h2><h4 id="_1-什么是组件化" tabindex="-1">1. 什么是组件化？ <a class="header-anchor" href="#_1-什么是组件化" aria-label="Permalink to &quot;1. 什么是组件化？&quot;">​</a></h4><p>组件化是将页面视作为一个容器，把页面各个独立的部分视作为组件，根据内容的需要，把相关组件拼装在一起即可组成完整的页面。组件具有独立性，组件与组件之间可以自由的组合。</p><h4 id="_2-前端组件化" tabindex="-1">2. 前端组件化 <a class="header-anchor" href="#_2-前端组件化" aria-label="Permalink to &quot;2. 前端组件化&quot;">​</a></h4><p>前端组件包含了模板（HTML）、样式（CSS）、脚本（JavaScript）三部分，其中样式、脚本可以由一个或多个模块组成。</p>',6),_=[n];function i(s,c,d,h,l,p){return e(),t("div",null,_)}const u=a(o,[["render",i]]);export{m as __pageData,u as default};
