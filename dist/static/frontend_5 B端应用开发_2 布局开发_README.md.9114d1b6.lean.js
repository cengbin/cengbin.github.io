import{_ as e,o as t,c as l,O as o}from"./chunks/framework.d9e2f5d0.js";const s="/static/典型的页面布局.9d503cf6.png",n="/static/管理后台布局.2f92b8e3.png",y=JSON.parse('{"title":"管理后台 - 布局开发","description":"","frontmatter":{},"headers":[],"relativePath":"frontend/5 B端应用开发/2 布局开发/README.md","filePath":"frontend/5 B端应用开发/2 布局开发/README.md"}'),c={name:"frontend/5 B端应用开发/2 布局开发/README.md"};function r(p,a,d,i,h,g){return t(),l("div",null,a[0]||(a[0]=[o('<h1 id="管理后台-布局开发" tabindex="-1">管理后台 - 布局开发 <a class="header-anchor" href="#管理后台-布局开发" aria-label="Permalink to &quot;管理后台 - 布局开发&quot;">​</a></h1><p>经典的页面布局</p><p><img src="'+s+'" alt=""></p><p>我们实现如下经典的管理后台布局</p><p><img src="'+n+`" alt=""></p><h2 id="组件设计" tabindex="-1">组件设计 <a class="header-anchor" href="#组件设计" aria-label="Permalink to &quot;组件设计&quot;">​</a></h2><ul><li>布局组件：<code>&lt;Layout&gt;</code> <code>&lt;Container&gt;</code> <code>&lt;Header&gt;</code> <code>&lt;Main&gt;</code> <code>&lt;Footer&gt;</code> <code>&lt;Sider&gt;</code></li><li>导航组件：<code>&lt;Menu&gt;</code> 菜单 <code>&lt;Breadcrumb&gt;</code> 面包屑 <code>&lt;Tags&gt;</code> 标签页</li></ul><h2 id="组件概述" tabindex="-1">组件概述 <a class="header-anchor" href="#组件概述" aria-label="Permalink to &quot;组件概述&quot;">​</a></h2><ul><li><code>&lt;Layout&gt;</code>：管理后台布局组件。</li><li><code>&lt;Container&gt;</code>：外层容器。</li><li><code>&lt;Header&gt;</code>：顶栏容器。</li><li><code>&lt;Main&gt;</code>：主要区域容器。</li><li><code>&lt;Footer&gt;</code>：底栏容器。</li><li><code>&lt;Sider&gt;</code>：侧边栏容器。</li></ul><h2 id="组件实现" tabindex="-1">组件实现 <a class="header-anchor" href="#组件实现" aria-label="Permalink to &quot;组件实现&quot;">​</a></h2><h2 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-label="Permalink to &quot;示例&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">Layout</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">&lt;</span><span style="color:#B392F0;">Outlet/&gt;</span></span>
<span class="line"><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">/Layout</span><span style="color:#F97583;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">Layout</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">&lt;</span><span style="color:#6F42C1;">Outlet/&gt;</span></span>
<span class="line"><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">/Layout</span><span style="color:#D73A49;">&gt;</span></span></code></pre></div>`,12)]))}const E=e(c,[["render",r]]);export{y as __pageData,E as default};
