import{_ as t,o as a,c as e,Q as i}from"./chunks/framework.0f4e1e9e.js";const p=JSON.parse('{"title":"前端开发「规范化」","description":"","frontmatter":{},"headers":[],"relativePath":"frontend/1 前端工程化/3 开发/3 规范化/README.md","filePath":"frontend/1 前端工程化/3 开发/3 规范化/README.md"}'),l={name:"frontend/1 前端工程化/3 开发/3 规范化/README.md"},r=i('<h1 id="前端开发「规范化」" tabindex="-1">前端开发「规范化」 <a class="header-anchor" href="#前端开发「规范化」" aria-label="Permalink to &quot;前端开发「规范化」&quot;">​</a></h1><h2 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言" aria-label="Permalink to &quot;前言&quot;">​</a></h2><ol><li>统一规范的最根本目的是为了保证团队成员的一致性，从而减少沟通成本，提高开发效率。</li><li>学会热爱标准，但要确保它们不是一成不变的。</li><li>如果制定的规范不适合您的团队，请确保可以适应和重写所需要的任何规则。</li><li>它并不是要强制执行一种工作方式，而是为了帮助促进团队之间的互动。</li></ol><h2 id="规范" tabindex="-1">规范 <a class="header-anchor" href="#规范" aria-label="Permalink to &quot;规范&quot;">​</a></h2><p>前端开发者需要建立和遵守的规范，大致可以划分成这几个方向：</p><ol><li><a href="./开发流程规范.html">开发流程规范</a></li><li><a href="./项目目录与文件结构规范.html">项目目录与文件结构规范</a></li><li><a href="./开发代码规范.html">开发代码规范</a><ol><li><a href="./ESLint+Prettier/ESLint实践.html">代码质量规范</a></li><li><a href="./ESLint+Prettier/Prettier实践.html">代码风格规范</a></li></ol></li><li><a href="./husky+lint-staged+commitlint实践.html">git commit规范</a></li><li><a href="./前后端分离接口规范.html">前后端分离接口规范</a></li></ol><h4 id="参考" tabindex="-1">参考 <a class="header-anchor" href="#参考" aria-label="Permalink to &quot;参考&quot;">​</a></h4><p><a href="https://mp.weixin.qq.com/s/oqD6PiLtzDgt4giXl-3JHQ" target="_blank" rel="noreferrer">https://mp.weixin.qq.com/s/oqD6PiLtzDgt4giXl-3JHQ</a></p>',8),o=[r];function n(h,s,c,d,m,_){return a(),e("div",null,o)}const q=t(l,[["render",n]]);export{p as __pageData,q as default};
