import{_ as a,o as s,c as e,Q as n}from"./chunks/framework.2eebfdfc.js";const v=JSON.parse('{"title":"为什么Vue data()要是函数，而不是对象？","description":"","frontmatter":{},"headers":[],"relativePath":"frontend/51 面试/2. 原理、算法/Vue/为什么Vue data()要是函数，而不是对象.md","filePath":"frontend/51 面试/2. 原理、算法/Vue/为什么Vue data()要是函数，而不是对象.md"}'),t={name:"frontend/51 面试/2. 原理、算法/Vue/为什么Vue data()要是函数，而不是对象.md"},p=n(`<h1 id="为什么vue-data-要是函数-而不是对象" tabindex="-1">为什么Vue data()要是函数，而不是对象？ <a class="header-anchor" href="#为什么vue-data-要是函数-而不是对象" aria-label="Permalink to &quot;为什么Vue data()要是函数，而不是对象？&quot;">​</a></h1><p>data 并不是像这样直接提供一个对象：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">data: {</span></span>
<span class="line"><span style="color:#e1e4e8;">  count: 0</span></span>
<span class="line"><span style="color:#e1e4e8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">data: {</span></span>
<span class="line"><span style="color:#24292e;">  count: 0</span></span>
<span class="line"><span style="color:#24292e;">}</span></span></code></pre></div><p>取而代之的是，一个组件的 data 选项必须是一个函数，因此每个实例可以维护一份被返回对象的独立的拷贝：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">data: function () {</span></span>
<span class="line"><span style="color:#e1e4e8;">  return {</span></span>
<span class="line"><span style="color:#e1e4e8;">    count: 0</span></span>
<span class="line"><span style="color:#e1e4e8;">  }</span></span>
<span class="line"><span style="color:#e1e4e8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">data: function () {</span></span>
<span class="line"><span style="color:#24292e;">  return {</span></span>
<span class="line"><span style="color:#24292e;">    count: 0</span></span>
<span class="line"><span style="color:#24292e;">  }</span></span>
<span class="line"><span style="color:#24292e;">}</span></span></code></pre></div><blockquote><p>当一个组件被定义，data 必须声明为返回一个初始数据对象的函数，因为组件可能被用来创建多个实例。如果 data 仍然是一个纯粹的对象，则所有的实例将共享引用同一个数据对象！(如果 Vue 没有这条规则，A，B组件等都引用同一个数据对象，点击A组件，B组件就出视图更新，这就会影响到其它所有实例，并不是我么想要看到的。)通过提供 data 函数，每次创建一个新实例后，我们能够调用 data 函数，从而返回初始数据的一个全新副本数据对象。</p></blockquote><p><a href="https://cn.vuejs.org/v2/api/#vm-data" target="_blank" rel="noreferrer">https://cn.vuejs.org/v2/api/#vm-data</a></p>`,7),l=[p];function o(c,r,d,i,_,u){return s(),e("div",null,l)}const y=a(t,[["render",o]]);export{v as __pageData,y as default};
