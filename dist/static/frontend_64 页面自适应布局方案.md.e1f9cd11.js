import{_ as a,o as e,c as t,Q as o}from"./chunks/framework.0f4e1e9e.js";const x=JSON.parse('{"title":"页面自适应布局","description":"","frontmatter":{},"headers":[],"relativePath":"frontend/64 页面自适应布局方案.md","filePath":"frontend/64 页面自适应布局方案.md"}'),_={name:"frontend/64 页面自适应布局方案.md"},r=o('<h1 id="页面自适应布局" tabindex="-1">页面自适应布局 <a class="header-anchor" href="#页面自适应布局" aria-label="Permalink to &quot;页面自适应布局&quot;">​</a></h1><h2 id="_1、栅格布局" tabindex="-1">1、栅格布局 <a class="header-anchor" href="#_1、栅格布局" aria-label="Permalink to &quot;1、栅格布局&quot;">​</a></h2><p>栅格布局是一种网格化的页面布局方式，它由行和列组成。</p><h2 id="_2、响应式布局" tabindex="-1">2、响应式布局 <a class="header-anchor" href="#_2、响应式布局" aria-label="Permalink to &quot;2、响应式布局&quot;">​</a></h2><p>通过CSS3的媒体查询，根据不同的屏幕尺寸区间设置不同的样式效果，和不同尺寸的图片，来保证页面图片显示不失真，布局元素错乱。</p><h2 id="_3、flexbox布局" tabindex="-1">3、Flexbox布局 <a class="header-anchor" href="#_3、flexbox布局" aria-label="Permalink to &quot;3、Flexbox布局&quot;">​</a></h2><p>Flexbox是一种基于弹性盒子模型的布局技术。</p>',7),n=[r];function l(i,s,d,c,h,f){return e(),t("div",null,n)}const b=a(_,[["render",l]]);export{x as __pageData,b as default};
