import{_ as e,o as t,c as s,O as l}from"./chunks/framework.d9e2f5d0.js";const q=JSON.parse('{"title":"基于SSM框架做项目开发总结","description":"","frontmatter":{},"headers":[],"relativePath":"backend/SSM框架做项目开发总结.md","filePath":"backend/SSM框架做项目开发总结.md"}'),n={name:"backend/SSM框架做项目开发总结.md"};function o(p,a,i,c,r,u){return t(),s("div",null,a[0]||(a[0]=[l(`<h1 id="基于ssm框架做项目开发总结" tabindex="-1">基于SSM框架做项目开发总结 <a class="header-anchor" href="#基于ssm框架做项目开发总结" aria-label="Permalink to &quot;基于SSM框架做项目开发总结&quot;">​</a></h1><h2 id="mybatis" tabindex="-1">Mybatis <a class="header-anchor" href="#mybatis" aria-label="Permalink to &quot;Mybatis&quot;">​</a></h2><h3 id="_1-阿里巴巴-链接池-mybatis-plus-jdbc-配置" tabindex="-1">1. 阿里巴巴 链接池 mybatis-plus jdbc 配置 <a class="header-anchor" href="#_1-阿里巴巴-链接池-mybatis-plus-jdbc-配置" aria-label="Permalink to &quot;1. 阿里巴巴 链接池 mybatis-plus jdbc 配置&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">&lt;!-- 1. 配置数据源 --&gt;</span></span>
<span class="line"><span style="color:#e1e4e8;">&lt;bean id=&quot;dataSource&quot; class=&quot;com.alibaba.druid.pool.DruidDataSource&quot;&gt;</span></span>
<span class="line"><span style="color:#e1e4e8;">    &lt;property name=&quot;driverClassName&quot; value=&quot;com.mysql.cj.jdbc.Driver&quot;/&gt;</span></span>
<span class="line"><span style="color:#e1e4e8;">    &lt;property name=&quot;url&quot; value=&quot;jdbc:mysql://127.0.0.1:3060&quot;/&gt;</span></span>
<span class="line"><span style="color:#e1e4e8;">    &lt;property name=&quot;username&quot; value=&quot;123&quot;/&gt;</span></span>
<span class="line"><span style="color:#e1e4e8;">    &lt;property name=&quot;password&quot; value=&quot;123&quot;/&gt;</span></span>
<span class="line"><span style="color:#e1e4e8;">    &lt;property name=&quot;initialSize&quot; value=&quot;5&quot;/&gt;</span></span>
<span class="line"><span style="color:#e1e4e8;">    &lt;property name=&quot;maxActive&quot; value=&quot;20&quot;/&gt;</span></span>
<span class="line"><span style="color:#e1e4e8;">&lt;/bean&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">&lt;!-- 1. 配置数据源 --&gt;</span></span>
<span class="line"><span style="color:#24292e;">&lt;bean id=&quot;dataSource&quot; class=&quot;com.alibaba.druid.pool.DruidDataSource&quot;&gt;</span></span>
<span class="line"><span style="color:#24292e;">    &lt;property name=&quot;driverClassName&quot; value=&quot;com.mysql.cj.jdbc.Driver&quot;/&gt;</span></span>
<span class="line"><span style="color:#24292e;">    &lt;property name=&quot;url&quot; value=&quot;jdbc:mysql://127.0.0.1:3060&quot;/&gt;</span></span>
<span class="line"><span style="color:#24292e;">    &lt;property name=&quot;username&quot; value=&quot;123&quot;/&gt;</span></span>
<span class="line"><span style="color:#24292e;">    &lt;property name=&quot;password&quot; value=&quot;123&quot;/&gt;</span></span>
<span class="line"><span style="color:#24292e;">    &lt;property name=&quot;initialSize&quot; value=&quot;5&quot;/&gt;</span></span>
<span class="line"><span style="color:#24292e;">    &lt;property name=&quot;maxActive&quot; value=&quot;20&quot;/&gt;</span></span>
<span class="line"><span style="color:#24292e;">&lt;/bean&gt;</span></span></code></pre></div><h3 id="_2-在-mybatis-的-xml-映射文件中使用-cdata-是为了确保包含特殊字符的-sql-语句能够被正确处理。xml-解析器在解析文档时-会将-和-等字符视为特殊字符-因为它们在-xml-中具有特定的含义。如果-sql-语句中包含这些字符-而没有进行适当处理-就会导致解析错误。" tabindex="-1">2. 在 MyBatis 的 XML 映射文件中使用 <code>CDATA</code> 是为了确保包含特殊字符的 SQL 语句能够被正确处理。XML 解析器在解析文档时，会将 &lt; 和 &amp; 等字符视为特殊字符，因为它们在 XML 中具有特定的含义。如果 SQL 语句中包含这些字符，而没有进行适当处理，就会导致解析错误。 <a class="header-anchor" href="#_2-在-mybatis-的-xml-映射文件中使用-cdata-是为了确保包含特殊字符的-sql-语句能够被正确处理。xml-解析器在解析文档时-会将-和-等字符视为特殊字符-因为它们在-xml-中具有特定的含义。如果-sql-语句中包含这些字符-而没有进行适当处理-就会导致解析错误。" aria-label="Permalink to &quot;2. 在 MyBatis 的 XML 映射文件中使用 \`CDATA\` 是为了确保包含特殊字符的 SQL 语句能够被正确处理。XML 解析器在解析文档时，会将 &lt; 和 &amp; 等字符视为特殊字符，因为它们在 XML 中具有特定的含义。如果 SQL 语句中包含这些字符，而没有进行适当处理，就会导致解析错误。&quot;">​</a></h3><p>以下是关于 MyBatis 中 <code>CDATA</code> 的使用说明：</p><p>保留原始字符：<code>CDATA</code> 允许您在 XML 文件中包含不被解析的文本数据，例如 SQL 语句中的特殊字符 <code>&lt;、&gt;</code> 和 <code>&amp;</code> 等。这些字符在 <code>CDATA</code> 区段内不会被 XML 解析器当作标记解析，从而避免了解析错误 。</p><p>简化转义操作：使用 <code>CDATA</code> 可以避免对 SQL 语句中的每个特殊字符进行逐一转义，简化了编写和维护 SQL 语句的工作量 。</p><p>使用示例：在 MyBatis 映射文件中，如果 SQL 语句包含特殊字符，可以将这些语句包裹在 <code>&lt;![CDATA[ ... ]]&gt;</code> 标记内。例如：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">&lt;if test=&quot;end_time != null and end_time.trim()!=&#39;&#39;&quot;&gt;</span></span>
<span class="line"><span style="color:#e1e4e8;">    and timeFormat &lt;![CDATA[ &lt;= ]]&gt; #{end_time}</span></span>
<span class="line"><span style="color:#e1e4e8;">&lt;/if&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">&lt;if test=&quot;end_time != null and end_time.trim()!=&#39;&#39;&quot;&gt;</span></span>
<span class="line"><span style="color:#24292e;">    and timeFormat &lt;![CDATA[ &lt;= ]]&gt; #{end_time}</span></span>
<span class="line"><span style="color:#24292e;">&lt;/if&gt;</span></span></code></pre></div><h2 id="生产打包关闭-junit" tabindex="-1">生产打包关闭 junit <a class="header-anchor" href="#生产打包关闭-junit" aria-label="Permalink to &quot;生产打包关闭 junit&quot;">​</a></h2><p>clean install -U -D maven.test.skip=true 这个命令的意思是：</p><ul><li>clean：这个目标会删除 target 目录下的所有生成的文件，这通常包括编译后的 .class 文件和打包后的 .jar 或 .war 文件等。</li><li>install：这个目标会将项目打包并安装到本地仓库中，这样其他项目就可以将此项目作为依赖项。</li><li>-U：这个参数的意思是 &quot;Update Snapshots&quot;，它会强制 Maven 检查并更新所有快照版本的依赖项（即版本号以 -SNAPSHOT 结尾的依赖项）。</li><li>-D：这个参数后面跟随的是属性定义，用于在命令行中设置或覆盖 Maven 属性。</li><li>maven.test.skip=true：这是一个 Maven 属性，设置为 true 表示跳过测试编译和执行阶段。也就是说，在构建过程中，Maven 不会运行任何测试用例。</li></ul>`,13)]))}const m=e(n,[["render",o]]);export{q as __pageData,m as default};
