import{_ as a,o as e,c as t,Q as r}from"./chunks/framework.0f4e1e9e.js";const o="/static/11880611-4dbea14cfa0b17c0.1dbbd5ea.png",m=JSON.parse('{"title":"SPA(单页面应用)和MPA(多页面应用)","description":"","frontmatter":{},"headers":[],"relativePath":"frontend/19 SPA与MPA/README.md","filePath":"frontend/19 SPA与MPA/README.md"}'),l={name:"frontend/19 SPA与MPA/README.md"},i=r('<h1 id="spa-单页面应用-和mpa-多页面应用" tabindex="-1">SPA(单页面应用)和MPA(多页面应用) <a class="header-anchor" href="#spa-单页面应用-和mpa-多页面应用" aria-label="Permalink to &quot;SPA(单页面应用)和MPA(多页面应用)&quot;">​</a></h1><p><img src="'+o+'" alt=""></p><h4 id="目录" tabindex="-1">目录 <a class="header-anchor" href="#目录" aria-label="Permalink to &quot;目录&quot;">​</a></h4><ul><li>单页面应用</li><li>多页面应用</li><li>总结</li></ul><h2 id="单页面应用" tabindex="-1">单页面应用 <a class="header-anchor" href="#单页面应用" aria-label="Permalink to &quot;单页面应用&quot;">​</a></h2><blockquote><p>第一次进入页面时会请求一个html文件，刷新清除一下，切换到其他组件，此时路径也相应变化，但是并没有新的html文件请求，页面内容却变化了。</p></blockquote><p>原理： js会感知到url的变化，通过这一点可以用js动态地将当前页面的内容清除，然后将下一个页面的内容挂载到当前页面上。这个时候的路由不再是后端来做了，而是前端来做，判断页面显示相应的组件，清除不需要的。</p><p>页面跳转： js渲染<br> 优点： 页面切换快<br> 缺点： 首屏时间稍慢，SEO差</p><h2 id="多页面应用" tabindex="-1">多页面应用 <a class="header-anchor" href="#多页面应用" aria-label="Permalink to &quot;多页面应用&quot;">​</a></h2><blockquote><p>每一次页面跳转的时候，后台服务器都会返回一个新的html文档，这种类型的网站也就是多页网站，也叫多页应用。</p></blockquote><p>页面跳转： 返回HTML<br> 优点： 首屏时间快，SEO效果好<br> 缺点： 页面切换慢</p><h2 id="参考链接" tabindex="-1">参考链接 <a class="header-anchor" href="#参考链接" aria-label="Permalink to &quot;参考链接&quot;">​</a></h2><ul><li><a href="https://www.jianshu.com/p/a02eb15d2d70" target="_blank" rel="noreferrer">https://www.jianshu.com/p/a02eb15d2d70</a></li></ul>',13),n=[i];function s(c,h,d,p,_,u){return e(),t("div",null,n)}const P=a(l,[["render",s]]);export{m as __pageData,P as default};
