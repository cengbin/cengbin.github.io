import{_ as e,o as t,c as o,O as r}from"./chunks/framework.d9e2f5d0.js";const f=JSON.parse('{"title":"页面自适应布局","description":"","frontmatter":{},"headers":[],"relativePath":"frontend/64 页面自适应布局方案.md","filePath":"frontend/64 页面自适应布局方案.md"}'),n={name:"frontend/64 页面自适应布局方案.md"};function l(i,a,d,_,s,h){return t(),o("div",null,a[0]||(a[0]=[r('<h1 id="页面自适应布局" tabindex="-1">页面自适应布局 <a class="header-anchor" href="#页面自适应布局" aria-label="Permalink to &quot;页面自适应布局&quot;">​</a></h1><h2 id="_1、栅格布局" tabindex="-1">1、栅格布局 <a class="header-anchor" href="#_1、栅格布局" aria-label="Permalink to &quot;1、栅格布局&quot;">​</a></h2><p>栅格布局是一种网格化的页面布局方式，它由行和列组成。</p><h2 id="_2、响应式布局" tabindex="-1">2、响应式布局 <a class="header-anchor" href="#_2、响应式布局" aria-label="Permalink to &quot;2、响应式布局&quot;">​</a></h2><p>通过CSS3的媒体查询，根据不同的屏幕尺寸区间设置不同的样式效果，和不同尺寸的图片，来保证页面图片显示不失真，布局元素错乱。</p><h2 id="_3、flexbox布局" tabindex="-1">3、Flexbox布局 <a class="header-anchor" href="#_3、flexbox布局" aria-label="Permalink to &quot;3、Flexbox布局&quot;">​</a></h2><p>Flexbox是一种基于弹性盒子模型的布局技术。</p>',7)]))}const p=e(n,[["render",l]]);export{f as __pageData,p as default};
