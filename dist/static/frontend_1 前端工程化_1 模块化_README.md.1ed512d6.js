import{_ as e,o as t,c as r,O as o}from"./chunks/framework.d9e2f5d0.js";const p=JSON.parse('{"title":"模块化","description":"","frontmatter":{},"headers":[],"relativePath":"frontend/1 前端工程化/1 模块化/README.md","filePath":"frontend/1 前端工程化/1 模块化/README.md"}'),n={name:"frontend/1 前端工程化/1 模块化/README.md"};function i(l,a,d,h,s,c){return t(),r("div",null,a[0]||(a[0]=[o('<h1 id="模块化" tabindex="-1">模块化 <a class="header-anchor" href="#模块化" aria-label="Permalink to &quot;模块化&quot;">​</a></h1><h2 id="定义" tabindex="-1">定义 <a class="header-anchor" href="#定义" aria-label="Permalink to &quot;定义&quot;">​</a></h2><p>模块化是一种处理复杂系统分解为更好的可管理模块的方式。</p><h2 id="作用" tabindex="-1">作用 <a class="header-anchor" href="#作用" aria-label="Permalink to &quot;作用&quot;">​</a></h2><p>模块化用来分割，组织和打包软件。每个模块完成一个特定的子功能，所有的模块按某种方法组装起来，成为一个整体，完成整个系统所要求的功能。</p><h2 id="模块化编程" tabindex="-1">模块化编程 <a class="header-anchor" href="#模块化编程" aria-label="Permalink to &quot;模块化编程&quot;">​</a></h2><ol><li><a href="./JavaScript模块化.html">JavaScript 模块化</a></li><li><a href="./CSS模块化.html">CSS 模块化</a></li></ol>',7)]))}const m=e(n,[["render",i]]);export{p as __pageData,m as default};
