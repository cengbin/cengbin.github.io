import{_ as a,o as e,c as t,Q as r}from"./chunks/framework.0f4e1e9e.js";const f=JSON.parse('{"title":"Webpack 项目构建打包优化","description":"","frontmatter":{},"headers":[],"relativePath":"frontend/2 前端优化/项目构建打包优化.md","filePath":"frontend/2 前端优化/项目构建打包优化.md"}'),o={name:"frontend/2 前端优化/项目构建打包优化.md"},n=r('<h1 id="webpack-项目构建打包优化" tabindex="-1">Webpack 项目构建打包优化 <a class="header-anchor" href="#webpack-项目构建打包优化" aria-label="Permalink to &quot;Webpack 项目构建打包优化&quot;">​</a></h1><h2 id="构建" tabindex="-1">构建 <a class="header-anchor" href="#构建" aria-label="Permalink to &quot;构建&quot;">​</a></h2><p>1、externals 提取项目依赖<br> 2、组件库的按需引入<br> 3、减小三方依赖的体积<br> 4、HappyPack 多线程打包<br> 5、Gzip压缩<br> 6、DllPlugin 动态链接库</p><h2 id="打包" tabindex="-1">打包 <a class="header-anchor" href="#打包" aria-label="Permalink to &quot;打包&quot;">​</a></h2><ol><li>分包，页面通过import()动态异步加载</li><li>tree shaking</li></ol><h4 id="参考" tabindex="-1">参考 <a class="header-anchor" href="#参考" aria-label="Permalink to &quot;参考&quot;">​</a></h4><p><a href="https://juejin.cn/post/7186315052465520698" target="_blank" rel="noreferrer">前端性能优化——包体积压缩82%、打包速度提升65%（Webpack 打包优化）</a></p>',7),i=[n];function l(_,c,s,h,d,p){return e(),t("div",null,i)}const k=a(o,[["render",l]]);export{f as __pageData,k as default};
