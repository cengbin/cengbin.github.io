import{_ as e,o as l,c as o,O as i}from"./chunks/framework.d9e2f5d0.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"frontend/97 面试/1. 基础/编程篇/谈谈你在工作中代码如何复用.md","filePath":"frontend/97 面试/1. 基础/编程篇/谈谈你在工作中代码如何复用.md"}'),n={name:"frontend/97 面试/1. 基础/编程篇/谈谈你在工作中代码如何复用.md"};function r(_,t,a,s,c,d){return l(),o("div",null,t[0]||(t[0]=[i("<ol><li>最原始的“拷贝代码” <ul><li>形式简单。</li></ul></li><li>封装成公共模块发布到npm，通过npm安装模块。以包的形式复用。 <ul><li>可复用性高。</li><li>如果项目引用了单个或多个包，其中任何一个包有升级，那么项目也必须重新升级部署。</li></ul></li><li>把代码封装成JS库，通过<code>&lt;script&gt;</code>加载引用。 <ul><li>同时加载多个js库需要发送多次请求会影响页面渲染速度。可以通过combo技术，把对静态资源文件们的多次请求合并到一起，达到请求一次URL，就可以同时获取多个静态文件的目的。</li></ul></li></ol>",1)]))}const f=e(n,[["render",r]]);export{m as __pageData,f as default};
