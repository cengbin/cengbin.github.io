import{_ as e,o as t,c as a,Q as i}from"./chunks/framework.2eebfdfc.js";const m=JSON.parse('{"title":"开发代码规范","description":"","frontmatter":{},"headers":[],"relativePath":"frontend/1 前端工程化/开发/3 开发代码规范化.md","filePath":"frontend/1 前端工程化/开发/3 开发代码规范化.md"}'),o={name:"frontend/1 前端工程化/开发/3 开发代码规范化.md"},l=i('<h1 id="开发代码规范" tabindex="-1">开发代码规范 <a class="header-anchor" href="#开发代码规范" aria-label="Permalink to &quot;开发代码规范&quot;">​</a></h1><h2 id="为什么需要规范" tabindex="-1">为什么需要规范 <a class="header-anchor" href="#为什么需要规范" aria-label="Permalink to &quot;为什么需要规范&quot;">​</a></h2><p>统一代码规范的好处：</p><ol><li>提高代码整体的可读性、可维护性、可复用性、可移植性和可靠性，这会从根本上降低开发成本，也是最重要的一点。</li><li>保证代码的一致性：软件系统中最重要的因素之一就是编码的一致性。如果编码风格一致，也更加易于维护，因为团队内任何人都可以快速理解并修改。</li><li>提升团队整体效率：开发人员通常需要花费大量的时间来解决代码质量问题，如果都按照规范编写，也有助于团队尽早发现问题，甚至完全预防问题，这将提高整个交付过程的效率。</li><li>减少code review期间一系列的争议，因为缺乏标准，在争议过程中双方很难妥协（没少因为这事争论过😕）。</li></ol><p>若不统一代码规范，可能会造成的后果：</p><ol><li>由于缺乏规范，导致代码风格不一，增加团队成员间的心理负担，极端情况下，某段代码只有某个人能修改（俗称屎山💩）。</li><li>团队间协作更加困难：因为开发人员得适应不同的风格，会导致效率低下（阅读代码是我们花费时间最多的地方）。</li><li>在code review期间可能经常为类似的事情做过多的讨论。</li><li>影响团队的生产力和质量，严重的甚至会影响团队和谐。</li></ol><p>使用 ESLint + Prettier 来统一前端代码质量、代码风格</p>',7),r=[l];function _(n,c,s,d,p,h){return t(),a("div",null,r)}const u=e(o,[["render",_]]);export{m as __pageData,u as default};
