# 1. 配置子服务example.com的nginx文件
# 此配置文件用于管理example.com域名下运行在8095端口的服务
# 2. 配置文件存放位置：
# 在Linux系统中，该配置文件应该放在：/etc/nginx/conf.d/ 目录下
# 在Windows系统中，该配置文件应该放在Nginx安装目录的：conf/conf.d/ 目录下
# 3. 应用配置：
# 将配置文件放到正确位置后
# 需要在主配置文件（通常是nginx.conf）的http块中包含这个配置：
# http {
#     include       mime.types;
#     default_type  application/octet-stream;
#
#     # 其他http配置...
#
#     # 包含子配置文件 - Windows环境
#     include       conf.d/*.conf;
#     # 或者使用具体文件路径
#     # include       conf.d/example_8095.conf;
#
#     # 其他配置...
# }
# 然后执行 nginx -t 检查配置是否有误
# 最后执行 nginx -s reload 重新加载配置
# 4. 需要修改的部分：
# 根据实际情况修改 root 指令指向的目录路径
# 如果需要代理API请求，取消注释API代理部分并修改后端地址

server {
    # 监听8095端口
    listen 8095;
    
    # 设置服务器名称，可以是example.com或其子域名
    server_name example.com sub.example.com;
    
    # 设置字符集
    charset utf-8;
    
    # 设置请求体缓冲区大小
    client_body_buffer_size 8M;
    # 设置最大请求体大小
    client_max_body_size 8M;

    # 启用gzip压缩
    gzip on;
    # 压缩的最小长度，小于1k的文件不会被压缩
    gzip_min_length 1k;
    # 压缩级别，1-9，级别越高压缩效果越好但CPU消耗越大
    gzip_comp_level 6;
    # 需要压缩的MIME类型
    gzip_types text/plain application/javascript application/x-javascript text/css application/xml text/javascript application/x-httpd-php;
    # 为不同的客户端发送不同的压缩内容
    gzip_vary on;
    # 禁用IE6的gzip
    gzip_disable "MSIE [1-6]\.";

    # 设置网站根目录
    # 请根据实际情况修改为您的网站文件存放位置
    root /usr/share/nginx/html/example_com_8095;

    # 访问日志配置
    access_log /var/log/nginx/example_8095_access.log;
    # 错误日志配置
    error_log /var/log/nginx/example_8095_error.log;

    # 默认首页设置
    index index.html index.htm;

    # 针对根路径的配置
    location / {
        # 尝试查找文件，如不存在则回退到index.html
        try_files $uri $uri/ /index.html;
        # 设置缓存控制，禁止缓存
        add_header Cache-Control "no-cache, no-store";
        # 允许跨域请求
        add_header Access-Control-Allow-Origin *;
    }

    # 静态资源处理
    location ~* \.(css|js|jpg|jpeg|png|gif|ico|webp|svg|ttf|woff|woff2)$ {
        # 设置长期缓存
        add_header Cache-Control "public, max-age=31536000";
        # 设置过期时间
        expires 365d;
        # 关闭访问日志（可选，减少日志量）
        access_log off;
    }

    # API代理示例
    # 如果您需要代理某些API请求到后端服务器，可以取消注释以下配置
    # location /api/ {
    #     # 设置代理目标，请替换为实际的后端服务地址
    #     proxy_pass http://backend_server:8080/;
    #     # 设置HTTP头
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header X-Forwarded-Proto $scheme;
    # }

    # 禁止访问隐藏文件
    location ~ /\.(ht|git|svn) {
        deny all;
    }

    # 自定义错误页面
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /404.html {
        root /usr/share/nginx/html;
        internal;
    }
    
    location = /50x.html {
        root /usr/share/nginx/html;
        internal;
    }
}
